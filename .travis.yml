language: c
os:
- linux
sudo: false
addons:
  apt:
    packages:
    - graphviz
    - texlive-latex-extra
    - dvipng
stage: Initial tests
stages:
- name: Initial tests
- name: Test docs, astropy dev, and without optional dependencies
- name: Cron tests
  if: type = cron
- name: Tests with other Python/Numpy versions, remote data
- name: deploy
  if: branch = master
env:
  global:
  - PYTHON_VERSION=3.6
  - MAIN_CMD='python setup.py'
  - NUMPY_VERSION=stable
  - ASTROPY_VERSION=stable
  - CONDA_DEPENDENCIES='requests beautifulsoup4 html5lib keyring aplpy matplotlib
    pyregion jinja2 flask'
  - CONDA_DEPENDENCIES_REMOTE='requests beautifulsoup4 html5lib keyring aplpy matplotlib
    pyregion jinja2 flask pandas'
  - PIP_DEPENDENCIES='https://github.com/keflavich/httpbin/archive/master.zip'
  - HTTP_BIN_CMD="import httpbin; httpbin.app.run()"
  - RUN_HTTPBIN='python -c "$HTTP_BIN_CMD" & ACTIVE_HTTPBIN=True'
  - SETUP_CMD='test'
  - CONDA_CHANNELS='astropy-ci-extras astropy'
  - EVENT_TYPE='pull_request push'
  - ASTROPY_USE_SYSTEM_PYTEST=1
  - SPHINX_VERSION='>=1.6'
  - DEBUG=true
  matrix:
  - PYTHON_VERSION=2.7 SETUP_CMD='egg_info'
  - PYTHON_VERSION=3.4 SETUP_CMD='egg_info'
  - PYTHON_VERSION=3.5 SETUP_CMD='egg_info'
  - PYTHON_VERSION=3.6 SETUP_CMD='egg_info'
matrix:
  fast_finish: true
  include:
  - os: linux
    stage: Tests with other Python/Numpy versions, remote data
    env: EVENT_TYPE='push cron' DEBUG=True ASTROPY_VERSION=dev SETUP_CMD='test -R
      -V' CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES_REMOTE
  - os: linux
    stage: Tests with other Python/Numpy versions, remote data
    env: EVENT_TYPE='push cron' PYTHON_VERSION=2.7 SETUP_CMD='test --remote-data -V'
      CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES_REMOTE KEYRING_VERSION='<12.0'
  - os: osx
    stage: Cron tests
    env: SETUP_CMD='test' CONDA_CHANNELS='conda-forge astropy-ci-extras astropy' EVENT_TYPE='cron'
  - os: linux
    env: SETUP_CMD='test --coverage' PIP_DEPENDENCIES="`echo $PIP_DEPENDENCIES codecov`"
  - os: linux
    stage: Test docs, astropy dev, and without optional dependencies
    env: SETUP_CMD='build_docs -w'
  - os: linux
    stage: Tests with other Python/Numpy versions, remote data
    env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.9  KEYRING_VERSION='<12.0'
  - os: linux
    stage: Tests with other Python/Numpy versions, remote data
    env: PYTHON_VERSION=3.4 NUMPY_VERSION=1.10
  - os: linux
    stage: Tests with other Python/Numpy versions, remote data
    env: PYTHON_VERSION=3.5.5 NUMPY_VERSION=1.11 KEYRING_VERSION='<12.0'
  - os: linux
    stage: Tests with other Python/Numpy versions, remote data
    env: NUMPY_VERSION=1.12 ASTROPY_VERSION=1.3 PYTEST_VERSION='<3.2'
  - os: linux
    stage: Test docs, astropy dev, and without optional dependencies
    env: ASTROPY_VERSION=development EVENT_TYPE='pull_request'
  - os: linux
    stage: Test docs, astropy dev, and without optional dependencies
    env: PYTHON_VERSION=2.7  KEYRING_VERSION='<12.0' CONDA_DEPENDENCIES='requests
      beautifulsoup4 html5lib keyring'
  - os: linux
    stage: Test docs, astropy dev, and without optional dependencies
    env: CONDA_DEPENDENCIES='requests beautifulsoup4 html5lib keyring'
  - os: linux
    stage: Tests with other Python/Numpy versions, remote data
    env: NUMPY_VERSION=prerelease DEBUG=True EVENT_TYPE='push pull_request cron'
  - os: linux
    env: MAIN_CMD='pycodestyle astroquery --count' SETUP_CMD='' EVENT_TYPE='push pull_request'
  - stage: deploy
    deploy:
      provider: pypi
      user: astroquery
      password: 
      secure: NvwZewQEwW+JadyF1ChzaKvQHLtFQ32BRSpw1Jx/IuE3aZS2QMp3Zdm9AjFJEyoI5BTe2WCdd8UIXusceAN+uCjgdv5s4nSHNjdIo9c+rwRh1mzD62kDVkNZzyTHQ9tBRydOUrQhllraP2AmFfNpMDWOnGeJDZL7NdF+F1pg7Is=
      on:
        branch: master
install:
- git clone git://github.com/astropy/ci-helpers.git
- source ci-helpers/travis/setup_conda.sh
script:
- $RUN_HTTPBIN
- $MAIN_CMD $SETUP_CMD
after_success:
- if [[ $SETUP_CMD == 'test --coverage' ]]; then codecov; fi
deploy:
  password:
    secure: igbQWSv2MhYw8PuvMl+JsU0JeMTETyoAY583lDwBO6VYMt0G6SNXQOoUJ+nhrLeU7LkSd4FAnvkFO+AbIzuCYJyoKcd85ZBVzamnselmU/7xcV6Cp8sIgokjcCI7Ur9IWnrRxTbLP76wOuqmcbRYyzPIihGzGFA41Z7xRSm+hqs=
