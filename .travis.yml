# We set the language to c because python isn't supported on the MacOS X nodes
# on Travis. However, the language ends up being irrelevant anyway, since we
# install Python ourselves using conda.
language: c

os:
    - linux

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# The apt packages below are needed for sphinx builds, which can no longer
# be installed with sudo apt-get.
addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng

env:
    global:
        # The following versions are the 'default' for tests, unless
        # overridden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - PYTHON_VERSION=3.6
        - MAIN_CMD='python setup.py'
        - NUMPY_VERSION=stable
        - ASTROPY_VERSION=stable
        - CONDA_DEPENDENCIES='requests beautifulsoup4 html5lib keyring aplpy pyregion jinja2 flask'
        - PIP_DEPENDENCIES='https://github.com/keflavich/httpbin/archive/master.zip'
        - HTTP_BIN_CMD="import httpbin; httpbin.app.run()"
        - RUN_HTTPBIN='python -c "$HTTP_BIN_CMD" & ACTIVE_HTTPBIN=True'
        - SETUP_CMD='test'
        - CONDA_CHANNELS='astropy-ci-extras astropy'
        - CONDA_DEPENDENCIES_OLD='requests beautiful-soup matplotlib html5lib'
        - PIP_DEPENDENCIES_OLD='pyregion aplpy keyring'
        - EVENT_TYPE='pull_request push'
        - ASTROPY_USE_SYSTEM_PYTEST=1

    matrix:
        - PYTHON_VERSION=2.7 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.4 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.5 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.6 SETUP_CMD='egg_info'

matrix:

    # Don't wait for allowed failures
    fast_finish: true

    include:
        # Testing remote-data when running builds on master or with
        # cron. Starting these early as they take much longer to run. Using
        # both short and long versions for remote-data to help test the
        # astropy test command.
        - os: linux
          env: EVENT_TYPE='push cron' DEBUG=True ASTROPY_VERSION=dev
               SETUP_CMD='test -R -V'
        - os: linux
          env: EVENT_TYPE='push cron' PYTHON_VERSION=2.7
               SETUP_CMD='test --remote-data -V'

        # No need to run it from cron
        # Try MacOS X
        - os: osx
          env: SETUP_CMD='test' CONDA_CHANNELS='conda-forge astropy-ci-extras astropy'

        # Do a coverage test in Python 2. Move coverage to 3.x once speed
        # issues have been solved; astropy/astropy#4826
        - os: linux
          env: PYTHON_VERSION=2.7 SETUP_CMD='test --coverage'

        # Check for sphinx doc build warnings - we do this first because it
        # may run for a long time
        - os: linux
          env: PYTHON_VERSION=2.7 SETUP_CMD='build_sphinx -w'

        # Try all python versions and Numpy versions. Since we can assume that
        # the Numpy developers have taken care of testing Numpy with different
        # versions of Python, we can vary Python and Numpy versions at the same
        # time. We don't expect any of these to fail in master for cron jobs.
        - os: linux
          env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.9
        - os: linux
          env: PYTHON_VERSION=3.4 NUMPY_VERSION=1.10
        - os: linux
          env: PYTHON_VERSION=3.5 NUMPY_VERSION=1.11

        # Now try Astropy dev and LTS vesions with the latest 3.x and 2.7.
        # The dev version only need to be tested on PRs as there are pull
        # and cron builds above already.
        - os: linux
          env: PYTHON_VERSION=2.7 ASTROPY_VERSION=development EVENT_TYPE='pull_request'
        - os: linux
          env: ASTROPY_VERSION=development EVENT_TYPE='pull_request'
        - os: linux
          env: PYTHON_VERSION=2.7 ASTROPY_VERSION=lts
               EVENT_TYPE='push pull_request cron' PYTEST_VERSION=2.7
        # Need to test with python3.5 for now as py3.6 requires pytest3 (due
        # to the usage of unittest) that is incompatible with LTS
        - os: linux
          env: PYTHON_VERSION=3.5 ASTROPY_VERSION=lts
               EVENT_TYPE='push pull_request cron' PYTEST_VERSION=2.7

        # Try with optional dependencies disabled
        - os: linux
          env: PYTHON_VERSION=2.7
               CONDA_DEPENDENCIES='requests beautifulsoup4 html5lib keyring'
        - os: linux
          env: CONDA_DEPENDENCIES='requests beautifulsoup4 html5lib keyring'

        # Try numpy pre-release version, this runs only when a pre-release
        # is available on pypi.
        - os: linux
          env: NUMPY_VERSION=prerelease DEBUG=True EVENT_TYPE='push pull_request cron'

        # Do a PEP8 test with pycodestyle
        - os: linux
          env: MAIN_CMD='pycodestyle astroquery --count'
               SETUP_CMD='' EVENT_TYPE='push pull_request'

install:
    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda_$TRAVIS_OS_NAME.sh

script:
   - $RUN_HTTPBIN
   - $MAIN_CMD $SETUP_CMD

after_success:
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then
          coveralls --rcfile='astroquery/tests/coveragerc';
      fi
